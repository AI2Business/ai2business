# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Python ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - 3.6
          - 3.7
          - 3.8
          #- 3.9
        os:
          - ubuntu-latest
          #- macOS-latest
          - windows-latest
        arch:
          - x64

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r dev-requirements.txt
      - name: Install AI2Business
        run: |
          pip install -e .
      - name: Lint with black and isort
        run: |
          isort --version-number
          isort --check --diff .
          black --version
          black --check --diff .
      - name: Test with pytest and generate coverage report
        run: |
          pytest -vv --cov=./ai2business --cov-report=xml
      - name: Codecov
        uses: codecov/codecov-action@v1.0.15
  doctest:
    name: Check for missing documentation
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint
        pip install -e .
    - name: Analysing the code with pylint
      run: |
        pylint ai2business   
  documentation:
    name: Build documentation
    runs-on: ubuntu-latest
    needs: doctest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r dev-requirements.txt
      - name: Install AI2Business
        run: |
          pip install -e .
      - name: Set git config
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
      - name: Build documentation
        run: |
          cd docs
          pip install -r doc-requirements.txt
          python autogen.py
          mkdocs build --clean --verbose
          cd ~
      - name: Deploy documentation develops
        if: contains(github.ref, 'refs/heads/main')
        run: |
          cd docs
          python autogen.py
          mkdocs gh-deploy --clean --force
          cd ~
      - name: Create Pull Request for IPython Notebooks
        if: github.event.pull_request.head.repo.full_name == github.repository
        uses: peter-evans/create-pull-request@v3
        with:
          commit-message: update docs
          title: Automated Updates to docs and IPython Notebooks
          body: This is an auto-generated PR for the documentary including the auto generated IPython Notebooks.
          labels: |
            ipynb
            documentation
            automated pr
          ref: docsbuild
          base: ${{ github.head_ref }}
  